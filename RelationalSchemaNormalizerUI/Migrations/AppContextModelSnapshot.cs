// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using AppContext = RelationalSchemaNormalizerLibrary.Models.AppContext;

#nullable disable

namespace RelationalSchemaNormalizerUI.Migrations
{
    [DbContext(typeof(AppContext))]
    partial class AppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RelationalSchemaNormalizerLibrary.Models.AttributeDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AttributeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GeneratedTableId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("KeyAttribute")
                        .HasColumnType("bit");

                    b.Property<string>("TableDetailId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("GeneratedTableId");

                    b.HasIndex("TableDetailId");

                    b.ToTable("AttributeDetails");
                });

            modelBuilder.Entity("RelationalSchemaNormalizerLibrary.Models.DatabaseDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConnectionString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataBaseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DatabaseDetails");
                });

            modelBuilder.Entity("RelationalSchemaNormalizerLibrary.Models.GeneratedTable", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Is2ndNF")
                        .HasColumnType("bit");

                    b.Property<bool>("Is3rdNF")
                        .HasColumnType("bit");

                    b.Property<string>("TableDetailId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TableDetailId");

                    b.ToTable("GeneratedTables");
                });

            modelBuilder.Entity("RelationalSchemaNormalizerLibrary.Models.TableDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatabaseDetailId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DatabaseDetailId");

                    b.ToTable("TableDetails");
                });

            modelBuilder.Entity("RelationalSchemaNormalizerLibrary.Models.AttributeDetail", b =>
                {
                    b.HasOne("RelationalSchemaNormalizerLibrary.Models.GeneratedTable", null)
                        .WithMany("AttributeDetails")
                        .HasForeignKey("GeneratedTableId");

                    b.HasOne("RelationalSchemaNormalizerLibrary.Models.TableDetail", "TableDetail")
                        .WithMany("AttributeDetails")
                        .HasForeignKey("TableDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TableDetail");
                });

            modelBuilder.Entity("RelationalSchemaNormalizerLibrary.Models.GeneratedTable", b =>
                {
                    b.HasOne("RelationalSchemaNormalizerLibrary.Models.TableDetail", "TableDetail")
                        .WithMany("GeneratedTables")
                        .HasForeignKey("TableDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TableDetail");
                });

            modelBuilder.Entity("RelationalSchemaNormalizerLibrary.Models.TableDetail", b =>
                {
                    b.HasOne("RelationalSchemaNormalizerLibrary.Models.DatabaseDetail", "DatabaseDetail")
                        .WithMany("TablesDetails")
                        .HasForeignKey("DatabaseDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DatabaseDetail");
                });

            modelBuilder.Entity("RelationalSchemaNormalizerLibrary.Models.DatabaseDetail", b =>
                {
                    b.Navigation("TablesDetails");
                });

            modelBuilder.Entity("RelationalSchemaNormalizerLibrary.Models.GeneratedTable", b =>
                {
                    b.Navigation("AttributeDetails");
                });

            modelBuilder.Entity("RelationalSchemaNormalizerLibrary.Models.TableDetail", b =>
                {
                    b.Navigation("AttributeDetails");

                    b.Navigation("GeneratedTables");
                });
#pragma warning restore 612, 618
        }
    }
}
